{
  "root": true,
  "ignorePatterns": ["!**/*", "*.d.ts", ".storybook/*", "**/assets/**", "*.scss"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module",
        "project": ["./tsconfig.*?.json"],
        "createDefaultProgram": true
      },
      "excludedFiles": ["*.scss", "*.spec.ts"],
      "extends": [
        "plugin:@angular-eslint/recommended",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended",
        "plugin:@nx/angular",
        "plugin:@nx/typescript"
      ],
      "plugins": [
        "@nx",
        "eslint-plugin-jsdoc",
        "eslint-plugin-cypress",
        "eslint-plugin-node",
        "eslint-plugin-prefer-arrow",
        "eslint-plugin-promise",
        "eslint-plugin-standard",
        "prettier",
        "unused-imports",
        "eslint-plugin-import",
        "@angular-eslint",
        "@typescript-eslint"
      ],
      "rules": {
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-explicit-any": [
          "off",
          {
            "ignoreRestArgs": true
          }
        ],
        "@typescript-eslint/no-unsafe-argument": "off",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": ["element", "attribute"],
            "prefix": "elares",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": ["element", "attribute"],
            "prefix": "elares",
            "style": "kebab-case"
          }
        ],
        "prettier/prettier": ["error"],
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": "error",
        "no-async-promise-executor": "error",
        "no-case-declarations": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-const-assign": "error",
        "no-constant-condition": "error",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-dupe-args": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty": "error",
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-ex-assign": "error",
        "no-extra-boolean-cast": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-global-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": "error",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-misleading-character-class": "error",
        "no-new-symbol": "error",
        "no-obj-calls": "error",
        "no-octal": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-self-assign": "error",
        "no-setter-return": "error",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-this-before-super": "error",
        "no-undef": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unused-labels": "error",
        "no-useless-catch": "error",
        "no-useless-escape": "error",
        "no-with": "error",
        "require-yield": "error",
        "use-isnan": "error",
        "valid-typeof": "error",
        "sort-keys": "off",
        "guard-for-in": "error",
        "id-denylist": [
          "error",
          "any",
          "Number",
          "number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined"
        ],
        "id-match": "error",
        "import/no-deprecated": "off",
        "import/no-duplicates": "error",
        "import/no-unused-modules": "error",
        "import/no-unassigned-import": ["off"],
        "import/order": [
          "warn",
          {
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": false
            },
            "newlines-between": "always",
            "groups": ["external", "builtin", "internal", ["parent", "sibling", "index"]],
            "pathGroups": [
              {
                "pattern": "{@angular/**,rxjs,rxjs/operators}",
                "group": "external",
                "position": "before"
              },
              {
                "pattern": "@rime/**",
                "group": "internal",
                "position": "before"
              }
            ],
            "pathGroupsExcludedImportTypes": []
          }
        ],
        "jsdoc/newline-after-description": "warn",
        "jsdoc/require-returns": [
          "warn",
          {
            "checkGetters": false
          }
        ],
        "jsdoc/no-types": "warn",
        "max-classes-per-file": "off",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-console": "warn",
        "no-eval": "error",
        "no-invalid-this": "off",
        "no-new-wrappers": "error",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-var": "error",
        "object-shorthand": "error",
        "one-var": ["error", "never"],
        "prefer-const": "error",
        "radix": "error",
        "arrow-body-style": "error",
        "jsdoc/check-alignment": "error",
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "rxjs/Rx",
                "message": "Please import directly from 'rxjs' instead"
              }
            ]
          }
        ],
        "complexity": [
          "error",
          {
            "max": 20
          }
        ],
        "consistent-return": "off",
        "eqeqeq": "error",
        "no-dupe-class-members": "off",
        "no-duplicate-imports": "error",
        "no-else-return": "error",
        "no-implicit-coercion": "error",
        "no-iterator": "error",
        "no-loop-func": "error",
        "no-new-func": "error",
        "no-return-assign": "error",
        "no-sequences": "error",
        "no-shadow": "off",
        "no-template-curly-in-string": "error",
        "no-unsafe-optional-chaining": "error",
        "prefer-arrow/prefer-arrow-functions": [
          "error",
          {
            "disallowPrototype": true,
            "singleReturnOnly": true,
            "classPropertiesAllowed": false,
            "allowStandaloneDeclarations": true
          }
        ],
        "require-atomic-updates": "error",
        "yoda": [
          "error",
          "never",
          {
            "exceptRange": true
          }
        ],
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "MSafeAny": {
                "message": "Avoid using the `MSafeAny` type. Did you mean `any`?"
              },
              "Object": {
                "message": "Avoid using the `Object` type. Did you mean `object`?"
              },
              "Function": {
                "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
              },
              "Boolean": {
                "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
              },
              "Number": {
                "message": "Avoid using the `Number` type. Did you mean `number`?"
              },
              "String": {
                "message": "Avoid using the `String` type. Did you mean `string`?"
              },
              "Symbol": {
                "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
              }
            }
          }
        ],
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/naming-convention": [
          "off",
          {
            "selector": "default",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE", "snake_case"],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["UPPER_CASE", "PascalCase"]
          }
        ],
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/triple-slash-reference": [
          "error",
          {
            "path": "always",
            "types": "prefer-import",
            "lib": "always"
          }
        ],
        "@typescript-eslint/unified-signatures": "error",
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "hoist": "all"
          }
        ],
        "@angular-eslint/no-empty-lifecycle-method": "error",
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": ["static-field", "instance-field", "static-method", "instance-method"]
          }
        ],
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/no-inferrable-types": "off",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "varsIgnorePattern": "^_",
            "args": "after-used",
            "argsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/no-dupe-class-members": ["error"],
        "curly": "error",
        "lines-around-comment": 0,
        "max-len": 0,
        "no-confusing-arrow": 0,
        "no-mixed-operators": 0,
        "no-tabs": 0,
        "no-unexpected-multiline": 0,
        "quotes": 0,
        "@typescript-eslint/quotes": 0,
        "array-bracket-newline": "off",
        "array-bracket-spacing": "off",
        "array-element-newline": "off",
        "arrow-parens": "off",
        "arrow-spacing": "off",
        "block-spacing": "off",
        "brace-style": "off",
        "comma-dangle": "off",
        "comma-spacing": "off",
        "comma-style": "off",
        "computed-property-spacing": "off",
        "dot-location": "off",
        "eol-last": "off",
        "func-call-spacing": "off",
        "function-call-argument-newline": "off",
        "function-paren-newline": "off",
        "generator-star": "off",
        "generator-star-spacing": "off",
        "implicit-arrow-linebreak": "off",
        "indent": "off",
        "jsx-quotes": "off",
        "key-spacing": "off",
        "keyword-spacing": "off",
        "linebreak-style": "off",
        "multiline-ternary": "off",
        "newline-per-chained-call": "off",
        "new-parens": "off",
        "no-arrow-condition": "off",
        "no-comma-dangle": "off",
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-floating-decimal": "off",
        "no-mixed-spaces-and-tabs": "off",
        "no-multi-spaces": "off",
        "no-multiple-empty-lines": "off",
        "no-reserved-keys": "off",
        "no-space-before-semi": "off",
        "no-trailing-spaces": "off",
        "no-whitespace-before-property": "off",
        "no-wrap-func": "off",
        "nonblock-statement-body-position": "off",
        "object-curly-newline": "off",
        "object-curly-spacing": "off",
        "object-property-newline": "off",
        "one-var-declaration-per-line": "off",
        "operator-linebreak": "off",
        "padded-blocks": "off",
        "quote-props": "off",
        "rest-spread-spacing": "off",
        "semi": "off",
        "semi-spacing": "off",
        "semi-style": "off",
        "space-after-function-name": "off",
        "space-after-keywords": "off",
        "space-before-blocks": "off",
        "space-before-function-paren": "off",
        "space-before-function-parentheses": "off",
        "space-before-keywords": "off",
        "space-in-brackets": "off",
        "space-in-parens": "off",
        "space-infix-ops": "off",
        "space-return-throw-case": "off",
        "space-unary-ops": "off",
        "space-unary-word-ops": "off",
        "switch-colon-spacing": "off",
        "template-curly-spacing": "off",
        "template-tag-spacing": "off",
        "unicode-bom": "off",
        "wrap-iife": "off",
        "wrap-regex": "off",
        "yield-star-spacing": "off",
        "@typescript-eslint/brace-style": "off",
        "@typescript-eslint/comma-dangle": "off",
        "@typescript-eslint/comma-spacing": "off",
        "@typescript-eslint/func-call-spacing": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/keyword-spacing": "off",
        "@typescript-eslint/member-delimiter-style": "off",
        "@typescript-eslint/no-extra-parens": "off",
        "@typescript-eslint/no-extra-semi": "off",
        "@typescript-eslint/object-curly-spacing": "off",
        "@typescript-eslint/semi": "off",
        "@typescript-eslint/space-before-function-paren": "off",
        "@typescript-eslint/space-infix-ops": "off",
        "@typescript-eslint/type-annotation-spacing": "off"
      }
    },
    {
      "files": ["*.spec.ts"],
      "extends": [],
      "rules": {}
    },
    {
      "files": ["*.util.ts"],
      "extends": ["plugin:@angular-eslint/recommended"],
      "rules": {
        "arrow-body-style": ["off"],
        "prefer-arrow/prefer-arrow-functions": [
          "warn",
          {
            "disallowPrototype": true,
            "singleReturnOnly": false,
            "classPropertiesAllowed": false,
            "allowStandaloneDeclarations": true
          }
        ],
        "@typescript-eslint/no-non-null-assertion": 0,
        "@typescript-eslint/no-inferrable-types": 0
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    },
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    }
  ]
}
