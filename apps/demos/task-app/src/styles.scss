@use '@angular/material' as mat;
@use 'sass:map';
@include mat.core();
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import '@angular/material/theming';

@mixin _palette-styles($palette) {
  background: mat.get-color-from-palette($palette, default);
  color: mat.get-color-from-palette($palette, default-contrast);
}
@mixin sidenav-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);

  .mat-drawer-container,
  .mat-sidenav-container {
    background: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
  .mat-sidenav {
    background: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}
@mixin card-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);
  .mat-mdc-card {
    background: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}
@mixin overlay-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);
  .cdk-overlay-pane {
    .overlay-background {
      background: mat.get-color-from-palette($background, background);
    }
    border-radius: 14px;
    &.mat-mdc-tooltip-panel {
      background: transparent;
    }
    .mat-mdc-dialog-container {
      border-radius: 12px;

      @media screen and (max-width: 500px) {
        .mat-mdc-dialog-content {
          // max-height: 80vh;
          height: 80vh;
        }
      }
    }
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}
// This fixes https://github.com//issues/4609
/* TODO(mdc-migration): The following rule targets internal classes of dialog that may no longer apply for the MDC version.*/
/* TODO(mdc-migration): The following rule targets internal classes of dialog that may no longer apply for the MDC version.*/
.mat-dialog-override {
  height: 0px;
  /* TODO(mdc-migration): The following rule targets internal classes of dialog that may no longer apply for the MDC version.*/
  mat-dialog-container {
    > :first-child {
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    mat-dialog-content,
    div[mat-dialog-content] {
      flex-grow: 1;
      max-height: unset;
    }
  }
}
@mixin elares-search-input-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);
  .elares-search-input {
    background: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}
.mat-toolbar {
  position: relative;
}
$mat-rng: (
  0: #ffffff,
  50: #f0f0f0,
  100: #f0f0f0,
  // lighter
  200: #f0f0f0,
  300: #607d8b,
  400: #607d8b,
  500: #607d8b,
  600: #607d8b,
  700: #375984,
  800: #375984,
  900: #843737,
  A100: #607d8b,
  A200: #607d8b,
  A400: #ffffff,
  A700: #375984,
  contrast: (
    50: white,
    100: white,
    200: white,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: white,
    A200: white,
    A400: #375984,
    A700: white,
  ),
);
$mat-elares-dark: (
  0: #ffffff,
  50: #f0f0f0,
  100: #f0f0f0,
  // lighter
  200: #f0f0f0,
  300: #6c8ab1,
  400: #375984,
  500: #375984,
  600: #375984,
  700: #607d8b,
  800: #607d8b,
  900: #ad4848,
  A100: #607d8b,
  A200: #607d8b,
  A400: #303030,
  A700: #18273a,
  contrast: (
    50: white,
    100: white,
    200: white,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: white,
    A200: white,
    A400: white,
    A700: white,
  ),
);

$elares-default-primary: mat.define-palette($mat-rng, A700);
$elares-default-accent: mat.define-palette($mat-rng, A400);
$elares-default-warn: mat.define-palette($mat-rng, 900);

$elares-dark-primary: mat.define-palette($mat-elares-dark, 300);
$elares-dark-accent: mat.define-palette($mat-elares-dark, A400);
$elares-dark-warn: mat.define-palette($mat-elares-dark, 900);

$elares-default-theme: mat.define-light-theme(
  (
    color: (
      primary: $elares-default-primary,
      accent: $elares-default-accent,
      warn: $elares-default-warn,
    ),
  )
);
$elares-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $elares-dark-primary,
      accent: $elares-dark-accent,
      warn: $elares-dark-warn,
    ),
  )
);
@include mat.all-component-themes($elares-default-theme);
@include sidenav-component-theme($elares-default-theme);
@include overlay-component-theme($elares-default-theme);
@include elares-search-input-component-theme($elares-default-theme);
@include card-component-theme($elares-default-theme);
.dark {
  @include mat.core-color($elares-dark-theme);
  @include mat.all-component-colors($elares-dark-theme);
  @include sidenav-component-theme($elares-dark-theme);
  @include overlay-component-theme($elares-dark-theme);
  @include elares-search-input-component-theme($elares-dark-theme);
  @include card-component-theme($elares-dark-theme);
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

/* TODO(mdc-migration): The following rule targets internal classes of card that may no longer apply for the MDC version.*/
mat-card.mat-mdc-card {
  border-radius: 8px;
  min-width: 16rem;
}
/* TODO(mdc-migration): The following rule targets internal classes of chips that may no longer apply for the MDC version.*/
mat-chip.mat-mdc-chip {
  user-select: none;
}
/* TODO(mdc-migration): The following rule targets internal classes of chips that may no longer apply for the MDC version.*/
mat-chip.mat-mdc-chip.mat-chip-selected {
  cursor: pointer;
}

$color-config: mat.get-color-config($elares-default-theme);
.bg-primary {
  background-color: mat.get-color-from-palette(map.get($color-config, 'primary'), A700);
  // color: white;
}

.bg-accent {
  background: mat.get-color-from-palette(map.get($color-config, 'accent'), A400);
  // color: white;
}
.color-primary {
  color: mat.get-color-from-palette(map.get($color-config, 'primary'), A700);
}

.color-accent {
  color: mat.get-color-from-palette(map.get($color-config, 'accent'), A400);
}
.stroke-primary {
  stroke: mat.get-color-from-palette(map.get($color-config, 'primary'), A700);
}
.stroke-accent {
  stroke: mat.get-color-from-palette(map.get($color-config, 'accent'), A400);
}

.project-state-active {
  color: #37843a !important;
  border-color: #37843a !important;
}
.project-state-inactive {
  color: #828282 !important;
  border-color: #828282 !important;
}
.project-state-finished {
  color: #375984 !important;
  border-color: #375984 !important;
}
.project-state-configuring {
  color: #412e5e !important;
  border-color: #412e5e !important;
}

.hide-element-access-control {
  display: none !important;
}
.disable-element-access-control {
  pointer-events: none !important;
}
::ng-deep {
  @media screen and (max-width: 500px) {
    /* TODO(mdc-migration): The following rule targets internal classes of list that may no longer apply for the MDC version.*/
    div.mat-list-item-content,
    div.mat-list-text {
      padding: 0 !important;
    }
  }
}
