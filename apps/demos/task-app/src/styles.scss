@use '@angular/material' as mat;
@use 'sass:map';
@include mat.core();
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
@import '@angular/material/theming';

/* Material Symbols Outlined */
@font-face {
  font-family: 'Material Symbols Outlined';
  font-style: normal;
  font-weight: 400;
  src: url(https://fonts.gstatic.com/s/materialsymbolsoutlined/v108/kJF1BvYX7BgnkSrUwT8OhrdQw4oELdPIeeII9v6oDMzByHX9rA6RzaxHMPdY43zj-jCxv3fzvRNU22ZXGJpEpjC_1n-q_4MrImHCIJIZrDCvHOej.woff2)
  format('woff2');
}

.material-symbols-outlined {
  font-family: 'Material Symbols Outlined';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

@mixin _palette-styles($palette) {
  background: mat.get-color-from-palette($palette, default);
  color: mat.get-color-from-palette($palette, default-contrast);
}
@mixin sidenav-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);

  .mat-drawer-container,
  .mat-sidenav-container {
    background: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
    mat-icon, .mdc-list-item__secondary-text, .mdc-list-item__primary-text {
      color: inherit !important;
    }
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
    .flex.flex-col.h-full.w-full.pl-2 {
      padding: 0 !important; // remove when rime fix this without sideroutes
    }
  }
  .mat-sidenav {
    background: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}
@mixin card-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);
  .mat-mdc-card {
    background-color: mat.get-color-from-palette($background, card);
    color: mat.get-color-from-palette($foreground, text);
    border-radius: 0.75rem !important;
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}
@mixin overlay-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);
  .cdk-overlay-pane {
    .overlay-background {
      background: mat.get-color-from-palette($background, background);
    }
    border-radius: 14px;
    &.mat-mdc-tooltip-panel {
      background: transparent;
    }
    .mat-mdc-dialog-container {
      border-radius: 12px;

      @media screen and (max-width: 500px) {
        .mat-mdc-dialog-content {
          // max-height: 80vh;
          height: 80vh;
        }
      }
    }
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}
// This fixes https://github.com//issues/4609
/* TODO(mdc-migration): The following rule targets internal classes of dialog that may no longer apply for the MDC version. */
/* TODO(mdc-migration): The following rule targets internal classes of dialog that may no longer apply for the MDC version. */
.mat-dialog-override {
  height: 0px;
  /* TODO(mdc-migration): The following rule targets internal classes of dialog that may no longer apply for the MDC version. */
  mat-dialog-container {
    > :first-child {
      display: flex;
      flex-direction: column;
      height: 100%;
    }
    mat-dialog-content,
    div[mat-dialog-content] {
      flex-grow: 1;
      max-height: unset;
    }
  }
}
@mixin elares-search-input-component-theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);
  .elares-search-input {
    background: mat.get-color-from-palette($background, background);
    color: mat.get-color-from-palette($foreground, text);
    &[color='primary'] {
      @include _palette-styles($primary);
    }
    &[color='accent'] {
      @include _palette-styles($accent);
    }
    &[color='warn'] {
      @include _palette-styles($warn);
    }
  }
}

$mat-rng: (
        0: #ffffff,
        50: #f0f0f0,
        100: #f0f0f0,
  // lighter
        200: #f0f0f0,
        300: #607d8b,
        400: #607d8b,
        500: #607d8b,
        600: #607d8b,
        700: #375984,
        800: #375984,
        900: #843737,
        A100: #607d8b,
        A200: #607d8b,
        A400: #ffffff,
        A700: #375984,
        contrast: (
                50: white,
                100: white,
                200: white,
                300: white,
                400: white,
                500: white,
                600: white,
                700: white,
                800: white,
                900: white,
                A100: white,
                A200: white,
                A400: #375984,
                A700: white,
        ),
);
$mat-elares-dark: (
        0: #ffffff,
        50: #f0f0f0,
        100: #f0f0f0,
  // lighter
        200: #f0f0f0,
        300: #6c8ab1,
        400: #375984,
        500: #375984,
        600: #375984,
        700: #607d8b,
        800: #607d8b,
        900: #ad4848,
        A100: #607d8b,
        A200: #607d8b,
        A400: #303030,
        A700: #18273a,
        contrast: (
                50: white,
                100: white,
                200: white,
                300: white,
                400: white,
                500: white,
                600: white,
                700: white,
                800: white,
                900: white,
                A100: white,
                A200: white,
                A400: white,
                A700: white,
        ),
);

$elares-default-primary: mat.define-palette($mat-rng, A700);
$elares-default-accent: mat.define-palette($mat-rng, A400);
$elares-default-warn: mat.define-palette($mat-rng, 900);
$elares-default-background: mat.define-palette($mat-rng, 0);

$elares-dark-primary: mat.define-palette($mat-elares-dark, 300);
$elares-dark-accent: mat.define-palette($mat-elares-dark, A400);
$elares-dark-warn: mat.define-palette($mat-elares-dark, 900);
$elares-dark-background: mat.define-palette($mat-elares-dark, A400);

$elares-default-theme: mat.define-light-theme(
                (
                        color: (
                                primary: $elares-default-primary,
                                accent: $elares-default-accent,
                                warn: $elares-default-warn,
                                background: $elares-default-background,
                        ),
                )
);
$elares-dark-theme: mat.define-dark-theme(
                (
                        color: (
                                primary: $elares-dark-primary,
                                accent: $elares-dark-accent,
                                warn: $elares-dark-warn,
                                background: $elares-dark-background,
                        ),
                )
);
@include mat.core-color($elares-default-theme);
@include mat.all-component-themes($elares-default-theme);
@include sidenav-component-theme($elares-default-theme);
@include overlay-component-theme($elares-default-theme);
@include elares-search-input-component-theme($elares-default-theme);
@include card-component-theme($elares-default-theme);
.mat-drawer-content {
  background-color: white !important;
}
.mdc-notched-outline__notch {
  border-right: none !important;
}

div.mdc-notched-outline__leading {
  min-width: 2rem !important;
  border-radius: 1rem 0 0 1rem !important;
}
div.mdc-notched-outline__trailing {
  border-radius: 0 1rem 1rem 0 !important;
}

.dark {
  .mat-drawer-content {
    background-color: inherit !important;
  }
  @include mat.core-color($elares-dark-theme);
  @include mat.all-component-colors($elares-dark-theme);
  @include sidenav-component-theme($elares-dark-theme);
  @include overlay-component-theme($elares-dark-theme);
  @include elares-search-input-component-theme($elares-dark-theme);
  @include card-component-theme($elares-dark-theme);
  .bg-background {
    background-color: mat.get-color-from-palette(
                    map.get(mat.get-color-config($elares-dark-theme), 'background'),
                    background
    ) !important;
  }
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

/* TODO(mdc-migration): The following rule targets internal classes of card that may no longer apply for the MDC version. */
mat-card.mat-mdc-card {
  min-width: 16rem;
}
/* TODO(mdc-migration): The following rule targets internal classes of chips that may no longer apply for the MDC version. */
mat-chip.mat-mdc-chip {
  user-select: none;
}

/* TODO(mdc-migration): The following rule targets internal classes of chips that may no longer apply for the MDC version. */
mat-chip.mat-mdc-chip.mat-chip-selected {
  cursor: pointer;
}

$color-config: mat.get-color-config($elares-default-theme);
.bg-primary {
  background-color: mat.get-color-from-palette(map.get($color-config, 'primary'), A700);
  // color: white;
}
.bg-background {
  background-color: mat.get-color-from-palette(
                  map.get($color-config, 'background'),
                  card
  ) !important;
}

.bg-accent {
  background: mat.get-color-from-palette(map.get($color-config, 'accent'), A400);
  // color: white;
}
.color-primary {
  color: mat.get-color-from-palette(map.get($color-config, 'primary'), A700);
}

.color-accent {
  color: mat.get-color-from-palette(map.get($color-config, 'accent'), A400);
}
.stroke-primary {
  stroke: mat.get-color-from-palette(map.get($color-config, 'primary'), A700);
}
.stroke-accent {
  stroke: mat.get-color-from-palette(map.get($color-config, 'accent'), A400);
}

.project-state-active {
  color: #37843a !important;
  border-color: #37843a !important;
}
.project-state-inactive {
  color: #828282 !important;
  border-color: #828282 !important;
}
.project-state-finished {
  color: #375984 !important;
  border-color: #375984 !important;
}

::ng-deep {
  @media screen and (max-width: 500px) {
    /* TODO(mdc-migration): The following rule targets internal classes of list that may no longer apply for the MDC version. */
    div.mat-list-item-content,
    div.mat-list-text {
      padding: 0 !important;
    }
  }
}

.b-calification-A {
  background-color: #43934e;
}
.c-calification-A {
  color: #43934e;
}
.b-calification-B {
  background-color: #54b24a;
}
.c-calification-B {
  color: #54b24a;
}
.b-calification-C {
  background-color: #97c93a;
}
.c-calification-C {
  color: #97c93a;
}
.b-calification-D {
  background-color: #ebe839;
}
.c-calification-D {
  color: #ebe839;
}
.b-calification-E {
  background-color: #efb331;
}
.c-calification-E {
  color: #efb331;
}
.b-calification-F {
  background-color: #e17628;
}
.c-calification-F {
  color: #e17628;
}
.b-calification-G {
  background-color: #e6412b;
}
.c-calification-G {
  color: #e6412b;
}

.ais-Highlight-highlighted {
  background-color: transparent;
  /* display: inline-block; */
  /* border-bottom: 3px solid #6c8ab1; */
  text-decoration: none;
  box-shadow: inset 0 -2px 0 #2196f3, 0 2px 0 #2196f3;
  transition: box-shadow 0.3s;
  color: inherit;
  overflow: hidden;
}
.mat-elevation-z0 {
  box-shadow: none !important;
}
/*.mat-mdc-form-field-subscript-wrapper {
  display: none;
} */


.search-width {
  min-width: 292px;
  width: 100%;
  max-width: 584px;
  position: relative;
  /* clears the ‘X’ from Internet Explorer */
  input[type=search]::-ms-clear { display: none; width : 0; height: 0; }
  input[type=search]::-ms-reveal { display: none; width : 0; height: 0; }
  /* clears the ‘X’ from Chrome */
  input[type="search"]::-webkit-search-decoration,
  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-results-button,
  input[type="search"]::-webkit-search-results-decoration { display: none; }
  mat-form-field {
    width: 100% !important;
  }
  .mat-mdc-form-field-subscript-wrapper {
    display: none;
  }
  div.mat-mdc-form-field-flex div.mat-mdc-form-field-infix {
    padding-top: 8px;
    padding-bottom: 8px;
    height: auto;

    min-height: 16px;
    margin-top: 4px;
  }
  &.absolute {
    mat-form-field {
      position: absolute;
      top: 0;
      left: 0;
    }
  }
  div.mdc-notched-outline__leading {
    width: 2rem !important;
    border-radius: 2rem 0 0 2rem !important;
  }
  div.mdc-notched-outline__trailing {
    border-radius: 0 2rem 2rem 0 !important;
  }

  &.small {
    div.mat-mdc-form-field-wrapper {
      margin: 0;
      padding: 0;
    }
    .mat-mdc-form-field-appearance-outline .mat-mdc-form-field-infix {
      padding: 0.5rem 0;
      border-top: 0.5rem solid transparent;
    }
  }
}
@media screen and (max-width: 768px) {
  .search-width {
    padding: 0 4rem;
    min-width: 0;
    .mat-mdc-form-field-appearance-outline .mat-mdc-form-field-prefix {
      margin-right: 5px;
    }
  }
}
@media screen and (max-width: 400px) {
  .search-width {
    padding: 0 4rem;
    text-align: center;
    .mat-mdc-form-field-appearance-outline .mat-mdc-form-field-prefix {
      margin-right: 0px;
    }
  }
}
/* width */
::-webkit-scrollbar {
  width: 0.45rem;
  height: 0.45rem;
}

/* Track */
::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 1rem;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: mat.get-color-from-palette(map.get($elares-default-theme, 'primary'), default);
  border-radius: 1rem;
}
::-webkit-scrollbar-corner {
  background: transparent;
}
.dark {
  scrollbar-color: mat.get-color-from-palette(map.get($elares-dark-theme, 'primary'), default);
}
